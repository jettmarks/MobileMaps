<<<<<<< HEAD
<?xml version="1.0" encoding="UTF-8"?>

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

	<modelVersion>4.0.0</modelVersion>

	<groupId>com.jettmarks</groupId>
	<artifactId>hb-test</artifactId>
	<packaging>war</packaging>
	<version>0.0.1-SNAPSHOT</version>

	<name>Test WAR for Hibernate (hb) component</name>

	<properties>
		<!-- Explictly specify a default encoding to avoid relying on the OS locale. -->
		<project.build.sourceEncoding>ISO-8859-1</project.build.sourceEncoding>

		<gwt.version>2.0.4</gwt.version>
		<smartgwt.version>2.4</smartgwt.version>

		<maven.compiler.source>1.6</maven.compiler.source>
		<maven.compiler.target>1.6</maven.compiler.target>
	</properties>

	<dependencies>

		<!-- GWT dependencies (from central repo) -->
		<dependency>
			<groupId>com.google.gwt</groupId>
			<artifactId>gwt-servlet</artifactId>
			<version>${gwt.version}</version>
			<scope>runtime</scope>
		</dependency>

		<dependency>
			<groupId>com.google.gwt</groupId>
			<artifactId>gwt-user</artifactId>
			<version>${gwt.version}</version>
			<scope>provided</scope>
		</dependency>

		<!-- SmartGWT dependencies (from SmartGWT repo) -->
		<dependency>
			<groupId>com.smartgwt</groupId>
			<artifactId>smartgwt</artifactId>
			<version>${smartgwt.version}</version>
		</dependency>

		<!-- test -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.8.2</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>com.jettmarks</groupId>
			<artifactId>hb</artifactId>
			<version>3.0.0-SNAPSHOT</version>
		</dependency>
	</dependencies>

	<build>
		<!-- This will produce a war file named hb-test.war, rather than hb-test-${project.version}.war. -->
		<finalName>hb-test</finalName>

		<!-- Make sure lasses output dir matches hosted webapp WEB-INF/classes 
			folder, so GWT Hosted browser can see the classes. -->
		<outputDirectory>target/hostedWar/WEB-INF/classes</outputDirectory>

		<plugins>

			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>gwt-maven-plugin</artifactId>
				<version>1.2</version>

				<executions>
					<execution>
						<goals>
							<goal>compile</goal>
							<goal>generateAsync</goal>
							<goal>test</goal>
						</goals>
					</execution>
				</executions>

				<configuration>
					<buildOutputDirectory>target/gwtClasses</buildOutputDirectory>
					<hostedWebapp>target/hostedWar</hostedWebapp>
					<runTarget>com.jettmarks.hb_test.Application/Application.html</runTarget>

					<draftCompile>true</draftCompile>
					<debugSuspend>false</debugSuspend>

					<!--<runTarget>'http://localhost:7080/gwtApplication/org.example.Application/Application.html'</runTarget> -->
					<!--<noServer>true</noServer> -->
					<!--<inplace>false</inplace> -->
				</configuration>

			</plugin>
			<!-- If you want to use the target/web.xml file mergewebxml produces, 
				tell the war plugin to use it. Also, exclude what you want from the final 
				artifact here. <plugin> <groupId>org.apache.maven.plugins</groupId> <artifactId>maven-war-plugin</artifactId> 
				<configuration> <webXml>target/web.xml</webXml> <warSourceExcludes>.gwt-tmp/**</warSourceExcludes> 
				</configuration> </plugin> -->

			<!-- Tomcat Deployment Plugin -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>tomcat-maven-plugin</artifactId>
				<version>1.1</version>
				<configuration>
					<url>http://andromeda:7080/manager</url>
					<!-- <url>${tomcat.manager.url}</url> -->
					<server>${tomcat.server}</server>
					<path>/${project.artifactId}-${project.version}</path>
				</configuration>
			</plugin>

			<plugin>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>2.3.2</version>
				<configuration>
					<source>${maven.compiler.source}</source>
					<target>${maven.compiler.target}</target>
				</configuration>
			</plugin>

			<!-- For deployment to Beanstalk -->
			<plugin>
				<groupId>br.com.ingenieux</groupId>
				<artifactId>beanstalk-maven-plugin</artifactId>
				<version>0.2.6</version>
				<configuration>
					<s3Bucket>elasticbeanstalk-us-west-2-511094994272</s3Bucket>
					<applicationName>hb_test</applicationName>
					<cnamePrefix>jmc-hbTest-env</cnamePrefix>
					<environmentName>hbTest-env</environmentName>
					<region>us-west-2</region>
					<beanstalk.region>us-west-2</beanstalk.region>
					<!--<s3Key>${project.artifactId}/${maven.build.timestamp}-${project.build.finalName}.war</s3Key>  -->
					<s3Key>${project.artifactId}/20140706-2002-${project.build.finalName}.war</s3Key>
					<!-- will save as s3://[bucket name]/[artifactId]/artifactId-version-TIMESTAMP.war -->
				</configuration>
			</plugin>

		</plugins>
		<pluginManagement>
			<plugins>
				<!--This plugin's configuration is used to store Eclipse m2e settings 
					only. It has no influence on the Maven build itself. -->
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>
											org.codehaus.mojo
										</groupId>
										<artifactId>
											gwt-maven-plugin
										</artifactId>
										<versionRange>
											[1.2,)
										</versionRange>
										<goals>
											<goal>compile</goal>
											<goal>generateAsync</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>

	<repositories>

		<repository>
			<id>smartgwt-releases</id>
			<name>SmartGWT Repository</name>
			<url>http://www.smartclient.com/maven2/</url>
			<releases>
				<enabled>true</enabled>
				<updatePolicy>never</updatePolicy>
			</releases>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</repository>

	</repositories>

</project>

=======
<?xml version="1.0" encoding="UTF-8"?>

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

	<modelVersion>4.0.0</modelVersion>

	<groupId>com.jettmarks</groupId>
	<artifactId>hb-test</artifactId>
	<packaging>war</packaging>
	<version>0.0.1-SNAPSHOT</version>

	<name>SmartGWT WAR</name>

	<properties>
		<!-- Explictly specify a default encoding to avoid relying on the OS locale. -->
		<project.build.sourceEncoding>ISO-8859-1</project.build.sourceEncoding>

		<gwt.version>2.0.4</gwt.version>
		<smartgwt.version>2.4</smartgwt.version>

		<maven.compiler.source>1.6</maven.compiler.source>
		<maven.compiler.target>1.6</maven.compiler.target>
	</properties>

	<dependencies>

		<!-- GWT dependencies (from central repo) 
		<dependency>
			<groupId>com.google.gwt</groupId>
			<artifactId>gwt-servlet</artifactId>
			<version>${gwt.version}</version>
			<scope>runtime</scope>
		</dependency>

		<dependency>
			<groupId>com.google.gwt</groupId>
			<artifactId>gwt-user</artifactId>
			<version>${gwt.version}</version>
			<scope>provided</scope>
		</dependency>
-->
		<!-- SmartGWT dependencies (from SmartGWT repo)
		<dependency>
			<groupId>com.smartgwt</groupId>
			<artifactId>smartgwt</artifactId>
			<version>${smartgwt.version}</version>
		</dependency>
 -->
		<!-- test -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.8.2</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>com.jettmarks</groupId>
			<artifactId>hb</artifactId>
			<version>3.0.0-SNAPSHOT</version>
		</dependency>
	</dependencies>

	<build>
		<!-- This will produce a war file named hb-test.war, rather than hb-test-${project.version}.war. -->
		<finalName>hb-test</finalName>

		<!-- Make sure classes output dir matches hosted webapp WEB-INF/classes 
			folder, so GWT Hosted browser can see the classes. -->
		<outputDirectory>target/hostedWar/WEB-INF/classes</outputDirectory>

		<plugins>
<!--
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>gwt-maven-plugin</artifactId>
				<version>1.2</version>

				<executions>
					<execution>
						<goals>
							<goal>compile</goal>
							<goal>generateAsync</goal>
							<goal>test</goal>
						</goals>
					</execution>
				</executions>

				<configuration>
					<buildOutputDirectory>target/gwtClasses</buildOutputDirectory>
					<hostedWebapp>target/hostedWar</hostedWebapp>
					<runTarget>com.jettmarks.hb_test.Application/Application.html</runTarget>

					<draftCompile>true</draftCompile>
					<debugSuspend>false</debugSuspend>
  -->
					<!--<runTarget>'http://localhost:7080/gwtApplication/org.example.Application/Application.html'</runTarget> -->
					<!--<noServer>true</noServer> -->
					<!--<inplace>false</inplace> -->
<!-- 
				</configuration>

			</plugin>
  -->
  
			<!-- If you want to use the target/web.xml file mergewebxml produces, 
				tell the war plugin to use it. Also, exclude what you want from the final 
				artifact here. <plugin> <groupId>org.apache.maven.plugins</groupId> <artifactId>maven-war-plugin</artifactId> 
				<configuration> <webXml>target/web.xml</webXml> <warSourceExcludes>.gwt-tmp/**</warSourceExcludes> 
				</configuration> </plugin> -->

			<!-- Tomcat Deployment Plugin -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>tomcat-maven-plugin</artifactId>
				<version>1.1</version>
				<configuration>
					<url>http://andromeda:7080/manager</url>
					<!-- <url>${tomcat.manager.url}</url> -->
					<server>${tomcat.server}</server>
					<path>/${project.artifactId}-${project.version}</path>
				</configuration>
			</plugin>

			<plugin>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>2.3.2</version>
				<configuration>
					<source>${maven.compiler.source}</source>
					<target>${maven.compiler.target}</target>
				</configuration>
			</plugin>

			<!-- For deployment to Beanstalk -->
			<plugin>
				<groupId>br.com.ingenieux</groupId>
				<artifactId>beanstalk-maven-plugin</artifactId>
				<version>1.3.1</version>
				<configuration>
					<s3Bucket>elasticbeanstalk-us-west-2-511094994272</s3Bucket>
					<applicationName>hb_test</applicationName>
					<cnamePrefix>jmc-hbTest-env</cnamePrefix>
					<environmentName>hbTest-env</environmentName>
					<!-- <region>us-west-2</region> -->
					<beanstalker.region>us-west-2</beanstalker.region>
					<!--<s3Key>${project.artifactId}/${maven.build.timestamp}-${project.build.finalName}.war</s3Key>  -->
					<s3Key>${project.artifactId}/20140706-2002-${project.build.finalName}.war</s3Key>
					<!-- will save as s3://[bucket name]/[artifactId]/artifactId-version-TIMESTAMP.war -->
				</configuration>
			</plugin>

		</plugins>
		<pluginManagement>
			<plugins>
				<!--This plugin's configuration is used to store Eclipse m2e settings 
					only. It has no influence on the Maven build itself. -->
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>
											org.codehaus.mojo
										</groupId>
										<artifactId>
											gwt-maven-plugin
										</artifactId>
										<versionRange>
											[1.2,)
										</versionRange>
										<goals>
											<goal>compile</goal>
											<goal>generateAsync</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>

	<repositories>

		<repository>
			<id>smartgwt-releases</id>
			<name>SmartGWT Repository</name>
			<url>http://www.smartclient.com/maven2/</url>
			<releases>
				<enabled>true</enabled>
				<updatePolicy>never</updatePolicy>
			</releases>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</repository>

	</repositories>

</project>

>>>>>>> refs/remotes/origin/master
